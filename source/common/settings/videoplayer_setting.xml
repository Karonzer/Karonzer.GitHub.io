<krpano>

	<!-- krpano 1.19.pr14 - Video-Interface Skin -->


	<!-- skin settings -->
	<player_skin_settings layout_width="100%"
	               layout_maxwidth="814"
	               controlbar_width="-24"
	               controlbar_height="40"
	               controlbar_offset="20"
	               design_bgcolor="0x2D3E50"
	               design_bgalpha="0.8"
	               design_bgborder="0"
	               design_bgroundedge="1"
	               design_bgshadow="0 4 10 0x000000 0.3"
	               design_text_css="color:#FFFFFF; font-family:Arial;"
	               design_text_shadow="1"
	               />

	<!-- skin_base - the base skin image -->
	<style name="skin_base" url="vtourskin.png" />


	<!-- skin_glow - button glowing (if additional ondown,onup,onout,over events are needed, this style provides ondown2,onup2,onover2,onout2 events) -->
	<style name="skin_glow"
	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); stopdelayedcall(skin_autohide); if(ondown2, ondown2() );"
	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); if(onover2, onover2() );"
	       onout="if(skin_lockglow === name AND !pressed, skin_buttonglow(null);delete(skin_lockglow); ); if(onout2, onout2() );"
	       onup="if(onup2, onup2()); delayedcall(0, if(hovering AND enabled, skin_buttonglow(get(name),0.3); , skin_buttonglow(null);delete(skin_lockglow); ); );"
	       />

	<action name="skin_buttonglow" scope="local">
		if('%1' !== 'null',
			set(strength,0.7);
			if(%2 != null, set(strength,%2));
			set(layer[skin_buttonglow].parent, %1);
			set(layer[skin_buttonglow].visible, true);
			tween(layer[skin_buttonglow].alpha, get(strength), 0.07);
		  ,
			tween(layer[skin_buttonglow].alpha, 0.0, 0.1, default,
				set(layer[skin_buttonglow].parent, null);
				set(layer[skin_buttonglow].visible, false);
			  );
		  );
	</action>


	<!-- skin events -->
	<events name="skin_events" keep="true"
	        onclick="skin_video_click_event();"
	        onmousedown="skin_video_down_event();"
	        onenterfullscreen.fullscreensupport="set(layer[skin_btn_fullscreen].crop, '64|576|64|64');"
	        onexitfullscreen.fullscreensupport="set(layer[skin_btn_fullscreen].crop, '0|576|64|64');"
	        />


	<!-- skin layout -->

	<style name="skintext" url="%SWFPATH%/plugins/textfield.swf" background="false" border="false" css="calc:player_skin_settings.design_text_css + ' text-align:left; font-style:italic; font-size:12px;'" textshadow="get:player_skin_settings.design_text_shadow" />
	<style name="skintext_sel" css="calc:player_skin_settings.design_text_css + ' text-align:left; font-style:italic; font-size:12px; text-decoration:underline;'" />
	<style name="settingsitem" type="container" align="lefttop" x="0" y="8" width="100%" height="20" bgcolor="0xFFFFFF" bgalpha="0.0" bgcapture="true" onover="set(bgalpha,0.25);" onout="set(bgalpha,0.0);" ondown.touch="onover();" onup.touch="onout();" children="false" />


	<layer name="skin_layer" keep="true" type="container" align="top" width="get:player_skin_settings.layout_width" maxwidth="get:player_skin_settings.layout_maxwidth" height="100%" maskchildren="true" xvisible="false" bgcapture="false" zorder="1" visible="false">

		<layer name="skin_control_bar" state="visible" type="container" autoalpha="true" align="bottom" width="get:player_skin_settings.controlbar_width" height="calc:player_skin_settings.controlbar_height" x="0" y="get:player_skin_settings.controlbar_offset" zorder="3" bgcolor="get:player_skin_settings.design_bgcolor" bgalpha="get:player_skin_settings.design_bgalpha" bgborder="get:player_skin_settings.design_bgborder" bgroundedge="get:player_skin_settings.design_bgroundedge" bgshadow="get:player_skin_settings.design_bgshadow" onover="stopdelayedcall(skin_autohide);">

			<!-- left buttons - play/pause, volume -->
			<layer name="skin_btn_playpause" style="skin_base|skin_glow" crop="0|640|64|64" align="left" x="5" y="0" scale="0.5" onclick="plugin[video].togglepause();" />

			<layer name="skin_btn_volume" visible.no-desktop="false" style="skin_glow" type="container" width="32" height="32" align="left" x="40" y="0" bgcapture="true" children="false" onover2="stopdelayedcall(skin_autohide);stopdelayedcall(autoclose_volumectrl); skin_open_volumectrl();" onout2="if(layer[skin_volumectrl].pressed == false, delayedcall(autoclose_volumectrl, 0.5, skin_close_volumectrl()); );" onclick="if(layer[skin_volumectrl].alpha == 1.0, if(plugin[video].volume GT 0.0, set(plugin[video].volume,0.0), set(plugin[video].volume,1.0)); skin_volumectrl_update(); );">
				<layer name="skin_btn_volume_icon" style="skin_base" crop="64|704|64|64" scale="0.5" align="lefttop" />
			</layer>

			<!-- seek bar -->
			<layer name="skin_video_seekbar_container" type="container" align="left" x.desktop="90" x.no-desktop="50" width.desktop.and.fullscreensupport="-148" width.desktop.and.no-fullscreensupport="-108" width.no-desktop.and.fullscreensupport="-105" width.no-desktop.and.no-fullscreensupport="-68" height="100%" bgcapture="true" ondown="stopdelayedcall(skin_autohide);skin_video_ondownseeking();">
				<layer name="skin_video_seekbar" type="container" bgcolor="0xFFFFFF" bgalpha="0.25" align="center" width="100%" height="4">
					<layer name="skin_video_loadbar" type="container" bgcolor="0xFFFFFF" bgalpha="0.5" align="left" width="0" height="4" />
					<layer name="skin_video_seekpos" type="container" bgcolor="0xFFFFFF" bgalpha="1.0" align="left" edge="center" x="0" bgroundedge="8" width="10" height="10" />
				</layer>
			</layer>

			<!-- right buttons - settings, fullscreen -->
			<!-- <layer name="skin_btn_settings" style="skin_base|skin_glow" crop="0|704|64|64" align="right" edge="center" x.fullscreensupport="57" x.no-fullscreensupport="20" y="0" scale="0.5" onclick="if(player_skin_settings_opened !== true, skin_open_settings(), skin_close_settings() );" /> -->

			<!-- <layer name="skin_btn_fullscreen" style="skin_base|skin_glow" crop="0|576|64|64" align="right" x="5" y="0" scale="0.5" onclick="switch(fullscreen);" devices="fullscreensupport" /> -->

			<!-- title, video time -->
			<layer name="skin_video_time" style="skintext" align="righttop" edge="rightbottom" x="4" enabled="false" html="" />

			<!-- sound volume control -->
			<layer name="skin_volumectrl" type="container" align="lefttop" edge="leftbottom" width="32" height="110" x="40" y="0" autoalpha="true" alpha="0.0" bgcolor="get:player_skin_settings.design_bgcolor" bgalpha="get:player_skin_settings.design_bgalpha" bgborder="get:player_skin_settings.design_bgborder" bgroundedge="get:player_skin_settings.design_bgroundedge" bgshadow="get:player_skin_settings.design_bgshadow" bgcapture="true" onover="stopdelayedcall(autoclose_volumectrl);" onout="if(pressed == false, delayedcall(autoclose_volumectrl, 0.5, skin_close_volumectrl()); );" ondown="stopdelayedcall(autoclose_volumectrl); skin_volumectrl_ondownchanging();" onup="onout();">
				<layer name="skin_volumectrl_bar_container" type="container" align="lefttop" width="100%" height="100%">
					<layer name="skin_volumectrl_bar" type="container" bgcolor="0xFFFFFF" bgalpha="0.25" align="center" width="4" height="-32">
						<layer name="skin_volumectrl_pos" type="container" bgcolor="0xFFFFFF" bgalpha="1.0" align="top" edge="center" x="0" bgroundedge="8" width="10" height="10" />
					</layer>
				</layer>
			</layer>

		</layer>

		<!-- glow effect layer -->
		<layer name="skin_buttonglow" style="skin_base" crop="64|384|64|64" align="center" x="0" y="1" scale="1.0" alpha="0.0" visible="false" enabled="false" />

		<!-- error window -->
		<layer name="skin_error" visible="false" zorder="99" type="container" align="center" width="100" height="100" bgcapture="true" onclick="set(visible,false);" bgcolor="get:player_skin_settings.design_bgcolor" bgalpha="get:player_skin_settings.design_bgalpha" bgborder="get:player_skin_settings.design_bgborder" bgroundedge="get:player_skin_settings.design_bgroundedge" bgshadow="get:player_skin_settings.design_bgshadow">
			<layer name="skin_error_msg" style="skintext" align="center" html="" enabled="false" padding="8 16" onautosized="copy(layer[skin_error].width, width); copy(layer[skin_error].height, height)" />
		</layer>

	</layer>


	<action name="skin_video_setup">
		if(skin_video_setup_done !== true,
			set(skin_video_setup_done, true);

			<!-- use the video events for getting state updates -->
			set(plugin[video].onvideoready, skin_video_updatestate() );
			set(plugin[video].onvideoplay, skin_video_updatestate(); if(player_skin_settings_opened !== true, skin_autohide(2.0)); );
			set(plugin[video].onvideopaused, skin_video_updatestate(); skin_show_playpause(); );
			<!-- set(plugin[video].onvideocomplete, skin_video_updatestate(); skin_show_playpause(); skin_show(); ); -->
			set(plugin[video].onerror, skin_video_error() );

			<!-- use the current scene title -->
			copy(layer[skin_title].html, scene[get(xml.scene)].title);

			<!-- start the video-time update interval -->
			setinterval(skin_video_seek_updates, 0.5, skin_video_updatetime() );
		  );
	</action>


	<action name="skin_video_updatetime" scope="local">
		copy(t1, plugin[video].time);
		copy(t2, plugin[video].totaltime);
		if(%1 !== null, calc(t1, %1 * t2); );
		div(t1_min, t1, 60);
		mod(t1_sec, t1, 60);
		Math.floor(t1_min);
		Math.floor(t1_sec);
		div(t2_min, t2, 60);
		mod(t2_sec, t2, 60);
		Math.floor(t2_min);
		Math.floor(t2_sec);
		calc(layer[skin_video_time].html, t1_min + ':' + (t1_sec LT 10 ? '0' : '') + t1_sec + ' / ' + t2_min + ':' + (t2_sec LT 10 ? '0' : '') + t2_sec);
		calc(layer[skin_video_seekpos].x, (t1 / t2 * 100) + '%');
		calc(layer[skin_video_loadbar].width, (plugin[video].loadedbytes / plugin[video].totalbytes * 100) + '%');
	</action>


	<action name="skin_video_ondownseeking">
		asyncloop(pressed,
			screentolayer(skin_video_seekbar, mouse.stagex,mouse.stagey, lx,ly);
			calc(seekpos, lx / layer[skin_video_seekbar].pixelwidth);
			clamp(seekpos, 0.0, 1.0);
			skin_video_updatetime(seekpos);
			delete(lx, ly);
		  ,
			plugin[video].seek(calc((seekpos * 100) + '%'));
		  );
	</action>


	<action name="skin_video_error">
		calc(layer[skin_error_msg].html, 'Error: ' + videoerror);
		set(layer[skin_error].visible, true);
	</action>


	<action name="skin_video_click_event">
		delayedcall(skin_click_detection, 0.25,
			if(layer[skin_control_bar].state == 'hidden',
				stopdelayedcall(skin_autohide_pp);
				skin_show();
				skin_show_playpause();
			  ,
				if(player_skin_settings_opened === true OR skin_volumectrl_opened == true,
					skin_close_settings();
					skin_close_volumectrl();
				  ,
					stopdelayedcall(skin_autohide_pp);
					if(layer[skin_video_playpause].state == 'hidden',
						skin_show_playpause();
					  ,
						skin_autohide(0.0);
					  );
				  );
			  );
		  );
	</action>


	<action name="skin_autohide">
		delayedcall(skin_autohide, %1,
			set(layer[skin_control_bar].state, 'hidden');
			tween(layer[skin_control_bar].y, calc(-(player_skin_settings.controlbar_offset + player_skin_settings.controlbar_height)));
			tween(layer[skin_control_bar].alpha, 0.0);
		  );
	</action>


	<action name="skin_show">
		stopdelayedcall(skin_autohide);
		set(layer[skin_control_bar].state, 'visible');
		tween(layer[skin_control_bar].y, get(player_skin_settings.controlbar_offset));
		tween(layer[skin_control_bar].alpha, 1.0);
	</action>


	<action name="skin_show_playpause">
		delayedcall(skin_autohide_pp, 2.0,
		  );
	</action>


	<action name="skin_video_down_event">
		stopdelayedcall(skin_click_detection);
	</action>

	<action name="skin_video_updatestate">
		calc(layer[skin_btn_playpause].crop, plugin[video].ispaused ? '0|640|64|64' : '64|640|64|64');
	</action>


	<action name="skin_open_volumectrl">
		if(skin_volumectrl_opened !== true,
			set(skin_volumectrl_opened, true);

			tween(layer[skin_volumectrl].alpha, 1.0, 0.2);
		  );
	</action>


	<action name="skin_close_volumectrl">
		if(skin_volumectrl_opened === true,
			set(skin_volumectrl_opened, false);

			tween(layer[skin_volumectrl].alpha, 0.0, 0.2);
		  );
	</action>


	<action name="skin_volumectrl_ondownchanging">
		asyncloop(pressed,
			screentolayer(skin_volumectrl_bar, mouse.stagex,mouse.stagey, lx,ly);
			calc(volumectrl_pos, 1.0 - (ly / layer[skin_volumectrl_bar].pixelheight));
			clamp(volumectrl_pos, 0.0, 1.0);
			copy(plugin[video].volume, volumectrl_pos);
			skin_volumectrl_update();
			delete(lx, ly, volumectrl_pos);
		  );
	</action>


	<action name="skin_volumectrl_update">
		calc(layer[skin_volumectrl_pos].y, ((1.0 - plugin[video].volume) * 100) + '%');
		calc(layer[skin_btn_volume_icon].crop, plugin[video].volume GT 0.0 ? '64|704|64|64' : '64|704|40|64');
		calc(layer[skin_btn_volume_icon].alpha, plugin[video].volume GT 0.0 ? 1.0 : 0.25);
	</action>

	<action name="videointerface_addsource">
		<!-- init/setup the video interface skin -->
		skin_video_setup();

		set(videosources['v%1'].sourcename, '%1');
		set(videosources['v%1'].videourl, '%2');
		set(videosources['v%1'].posterurl, '%3');
	</action>

	<!-- videointerface_addsource
		%1 - name
		%2 - videourl
		%3 - posterurl
	-->
	<action name="videointerface_play">
		set(layer[skin_error].visible, false);
		copy(vs, videosources['v%1']);
		plugin[video].playvideo(get(vs.videourl), get(vs.posterurl), get(plugin[video].pausedonstart), get(plugin[video].time));
		skin_volumectrl_update();
	</action>

</krpano>
